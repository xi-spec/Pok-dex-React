{"version":3,"sources":["redux/actions/actionsType.ts","constants/api.ts","redux/actions/pokeActions.ts","pages/dashbord/pagination/index.tsx","pages/dashbord/index.tsx","pages/detail/index.tsx","redux/store/initialState.ts","redux/reducers/index.ts","redux/reducers/pokedexReducer.ts","redux/store/configureStore.ts","App.tsx","index.tsx"],"names":["API","loadPokemons","page","rowsPerPage","dispatch","a","pokemons","axios","get","data","results","forEach","pokemon","url","sort","b","id","length","type","actionsType","loadPokemon","pokeName","Pagination","actions","useState","setPage","setRowsPerPage","TablePagination","component","className","rowsPerPageOptions","count","onChangePage","event","newPage","loadPokemonsNumber","onChangeRowsPerPage","value","target","handleChangeRowsPerPage","connect","pokedex","bindActionCreators","useEffect","map","to","name","types","src","sprites","other","dream_world","front_default","front_shiny","alt","toUpperCase","CircularProgress","color","match","params","back_default","height","weight","stats","stat","base_stat","style","width","initialState","rootReducer","combineReducers","state","action","actionsTypes","configureStore","composeEnhancers","compose","createStore","applyMiddleware","reduxImmutableStatInvariant","thunk","App","store","exact","path","Dashboard","Detail","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4bc675.chunk.js","sourcesContent":["export default {\n  LOAD_POKEMONS: 'LOAD_POKEMONS',\n  LOAD_POKEMON: 'LOAD_POKEMON'\n};\n","\nexport const OFFSET = '&offset=';\n\nexport const API = {\n  pokemon: 'https://pokeapi.co/api/v2/pokemon/',\n  pokemons: 'https://pokeapi.co/api/v2/pokemon?limit='\n\n};\n","import actionsType from './actionsType';\nimport axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { API, OFFSET } from '../../constants/api';\n\nexport function loadPokemons (page:number, rowsPerPage:number) {\n  return async (dispatch: Dispatch) => {\n    let pokemons:any = [];\n    const { data: { results } } = await axios.get(`${API.pokemons}${rowsPerPage}${OFFSET}${page}`);\n\n    results.forEach(async (pokemon:any) => {\n      const { data } = await axios.get(pokemon.url);\n      pokemons = [...pokemons, data];\n      pokemons.sort((a:any, b:any) => {\n        return a.id - b.id;\n      });\n\n      if (pokemons.length === rowsPerPage) {\n        dispatch({\n          type: actionsType.LOAD_POKEMONS,\n          pokemons\n        });\n      } else {\n        dispatch({\n          type: actionsType.LOAD_POKEMONS,\n          pokemons: []\n        });\n      }\n    });\n  };\n}\n\nexport function loadPokemon (pokeName:string) {\n  return async (dispatch:Dispatch) => {\n    const { data } = await axios.get(`${API.pokemon}${pokeName}`);\n\n    dispatch({\n      type: actionsType.LOAD_POKEMON,\n      data\n    });\n  };\n}\n","import React, { useState, MouseEvent } from 'react';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nexport default function Pagination ({ actions }:{actions:any}) {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(14);\n\n  const loadPokemonsNumber = (page:number, rowsPerPage:number) => {\n    return page === 1 ? rowsPerPage : rowsPerPage * page;\n  };\n\n  const handleChangePage = (event:MouseEvent<HTMLButtonElement> | null, newPage:number) => {\n    setPage(newPage);\n    newPage === 0\n      ? actions.loadPokemons(newPage, rowsPerPage)\n      : actions.loadPokemons(loadPokemonsNumber(newPage, rowsPerPage), rowsPerPage);\n  };\n\n  const handleChangeRowsPerPage = (event:any) => {\n    const { value } = event.target;\n    setPage(0);\n    setRowsPerPage(+value);\n    actions.loadPokemons(0, value);\n  };\n\n  return (\n\n     <TablePagination\n        component=\"div\"\n        className='pagination'\n        rowsPerPageOptions={[14, 28, 56, 112]}\n        count={1118}\n        page={page}\n        onChangePage={handleChangePage}\n        rowsPerPage={rowsPerPage}\n        onChangeRowsPerPage={(event) => handleChangeRowsPerPage(event)}\n      />\n\n  );\n}\n","import React, { useEffect } from 'react';\nimport './styles.scss';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPokemons } from '../../redux/actions/pokeActions';\nimport { Link } from 'react-router-dom';\nimport { Pokemon, Pokedex } from '../../models/interface';\nimport Pagination from './pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Dashboard ({ actions, pokemons }:{actions:any, pokemons:Pokemon[]}) {\n  useEffect(() => {\n    actions.loadPokemons(0, 14);\n  }, []);\n\n  return (\n    <main className='pokedex'>\n      <h1 className='title'>POKEDEX</h1>\n      <div\n      className='pokemon__imgs-container'>\n      {pokemons.length\n        ? (\n            pokemons.map((pokemon:Pokemon) => (\n          <Link\n          key={pokemon.name}\n          to={`/detail/${pokemon.name}`}\n          className = 'col-1'\n          >\n            <div\n            className={`module ${pokemon.types[0].type.name}`}\n          >\n            <img\n            className='pokemon-img'\n             src={pokemon.sprites.other.dream_world.front_default\n               ? pokemon.sprites.other.dream_world.front_default\n               : pokemon.sprites.other['official-artwork'].front_default\n                 ? pokemon.sprites.other['official-artwork'].front_default\n                 : pokemon.sprites.front_shiny} alt={pokemon.name}/>\n             <h5>{pokemon.name.toUpperCase()}</h5>\n            </div>\n          </Link>\n\n            ))\n          )\n        : <CircularProgress color=\"inherit\" /> }\n      </div>\n     <Pagination actions={actions} />\n    </main>\n  );\n}\n\nfunction mapStateToProps ({ pokedex: { pokemons } }:{pokedex:Pokedex}) {\n  return { pokemons };\n}\n\nfunction mapDispatchToProps (dispatch:Dispatch) {\n  return {\n    actions: bindActionCreators({\n      loadPokemons\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { useEffect } from 'react';\nimport './styles.scss';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPokemon } from '../../redux/actions/pokeActions';\nimport { Pokemon, Pokedex } from '../../models/interface';\n\nfunction Detail ({ actions, pokemon, match }:{actions:any, pokemon:Pokemon, match:any}) {\n  const { pokeName } = match.params;\n\n  useEffect(() => {\n    actions.loadPokemon(pokeName);\n  }, []);\n\n  return (\n    pokemon && (\n\n    <div className={`container ${pokemon.types[0].type.name}`}>\n\n    <section className='margin'>\n    <h1>{pokemon.name}</h1>\n    <div className ='types__container'>\n {pokemon.types.map(type => (\n   <div key={type.type.name} className={`types-row__container type-${type.type.name}`}>\n     <p>{type.type.name}</p>\n   </div>\n ))}\n    </div>\n    <div className ='id__container'>\n      <h3>{`ID:${pokemon.id}`}</h3>\n    </div>\n    <div className='pokemon__img-container'>\n    <img\n      className='pokemon-img'\n      src={pokemon.sprites.other.dream_world.front_default}></img>\n         <img\n      src={pokemon.sprites.back_default}></img>\n    </div>\n</section>\n\n<section className='detail'>\n    <div className='pokemon-detail__container'>\n\n      <div className='height-weight'>\n        <div className='row-content'>\n           <h4>Height:</h4>\n           <p>{`${pokemon.height / 10} M`}</p>\n        </div>\n        <div className='row-content'>\n           <h4>Weight:</h4>\n           <p>{`${pokemon.weight / 10} kg`}</p>\n        </div>\n      </div>\n\n      <div className='progress__container'>\n        <h4>Stats:</h4>\n      {pokemon.stats.map(stat => (\n        <div key={stat.stat.name}>\n        <p>{`${stat.stat.name}: ${stat.base_stat}`}</p>\n        <div className={`progress-bar stripes ${stat.base_stat >= 50 ? 'green' : 'red'}`}>\n          <span style={{ width: stat.base_stat * 2 }}></span>\n        </div>\n        </div>\n      ))}\n      </div>\n\n    </div>\n</section>\n    </div>\n    )\n  );\n}\n\nfunction mapStateToProps ({ pokedex: { pokemon } }:{pokedex:Pokedex}) {\n  return { pokemon };\n}\n\nfunction mapDispatchToProps (dispatch:Dispatch) {\n  return {\n    actions: bindActionCreators({\n      loadPokemon\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","const initialState = {\n  pokedex: {\n    pokemons: [],\n    pokemon: null\n\n  }\n};\n\nexport default initialState;\n","import { combineReducers } from 'redux';\nimport pokedex from './pokedexReducer';\n\nconst rootReducer = combineReducers({\n  pokedex\n});\n\nexport default rootReducer;\n","import { AnyAction } from 'redux';\nimport actionsTypes from '../actions/actionsType';\nimport initialState from '../store/initialState';\n\nexport default function pokemon (state = initialState.pokedex, action:AnyAction) {\n  switch (action.type) {\n    case actionsTypes.LOAD_POKEMON:\n      return { ...state, pokemon: action.data };\n\n    case actionsTypes.LOAD_POKEMONS:\n      return { ...state, pokemons: action.pokemons };\n\n    default:return state;\n  }\n}\n","import reduxImmutableStatInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nfunction configureStore () {\n  const composeEnhancers = compose;\n\n  return createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(reduxImmutableStatInvariant(), thunk))\n  );\n}\nexport default configureStore();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Dashboard from './pages/dashbord';\nimport Detail from './pages/detail';\nimport store from './redux/store/configureStore';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport './app.scss';\n\nfunction App () {\n  return (\n    <Provider store={store}>\n            <Router>\n              <Switch>\n                <Route exact path='/' component={Dashboard}></Route>\n                <Route exact path='/detail/:pokeName' component={Detail}></Route>\n              </Switch>\n            </Router>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}